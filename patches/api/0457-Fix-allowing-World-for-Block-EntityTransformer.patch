From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Wed, 3 Jan 2024 20:31:07 -0800
Subject: [PATCH] Fix allowing World for Block/EntityTransformer

Block/EntityTransformer for AsyncStructureGenerateEvent need to
accept World and LimitedRegion instances because structure generation
can happen to both ServerLevel and WorldGenRegion instances.

diff --git a/src/main/java/org/bukkit/util/BlockTransformer.java b/src/main/java/org/bukkit/util/BlockTransformer.java
index 7f430519c021a68ba718921db20be8442082be5d..ef5438cab5f8beff9846a7128cf5eb343722432e 100644
--- a/src/main/java/org/bukkit/util/BlockTransformer.java
+++ b/src/main/java/org/bukkit/util/BlockTransformer.java
@@ -58,5 +58,5 @@ public interface BlockTransformer {
      * @return the new block state
      */
     @NotNull
-    BlockState transform(@NotNull LimitedRegion region, int x, int y, int z, @NotNull BlockState current, @NotNull TransformationState state);
+    BlockState transform(@NotNull org.bukkit.RegionAccessor region, int x, int y, int z, @NotNull BlockState current, @NotNull TransformationState state); // Paper - this type needs to be RegionAccessor to allow for World
 }
diff --git a/src/main/java/org/bukkit/util/EntityTransformer.java b/src/main/java/org/bukkit/util/EntityTransformer.java
index d1f44fd90d82f07466a98896031d1e9db382b518..e797d8a3a611b0b95115aeab67155d83e406120e 100644
--- a/src/main/java/org/bukkit/util/EntityTransformer.java
+++ b/src/main/java/org/bukkit/util/EntityTransformer.java
@@ -25,5 +25,5 @@ public interface EntityTransformer {
      * @return {@code true} if the entity should be spawned otherwise
      * {@code false}
      */
-    boolean transform(@NotNull LimitedRegion region, int x, int y, int z, @NotNull Entity entity, boolean allowedToSpawn);
+    boolean transform(@NotNull org.bukkit.RegionAccessor region, int x, int y, int z, @NotNull Entity entity, boolean allowedToSpawn); // Paper - this type needs to be RegionAccessor to allow for World
 }
