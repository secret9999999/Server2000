From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: TonytheMacaroni <tonythemacaroni123@gmail.com>
Date: Thu, 9 Nov 2023 20:35:35 -0500
Subject: [PATCH] Add UUID attribute modifier API


diff --git a/src/main/java/org/bukkit/attribute/AttributeInstance.java b/src/main/java/org/bukkit/attribute/AttributeInstance.java
index 5513174ea545bb5b4fdc028cbaa4c1bb763e2c6d..f1fa86ddf1f50a357c9e94cc61261d8c96a2da6f 100644
--- a/src/main/java/org/bukkit/attribute/AttributeInstance.java
+++ b/src/main/java/org/bukkit/attribute/AttributeInstance.java
@@ -39,6 +39,42 @@ public interface AttributeInstance {
     @NotNull
     Collection<AttributeModifier> getModifiers();
 
+    // Paper start
+    /**
+     * Gets the modifier with the corresponding key.
+     *
+     * @param key the jey of the modifier
+     * @return the modifier, if it exists
+     */
+    @org.jetbrains.annotations.Nullable AttributeModifier getModifier(@NotNull net.kyori.adventure.key.Key key);
+
+    /**
+     * Remove a modifier with the corresponding key from this instance.
+     *
+     * @param key the key of the modifier
+     */
+    void removeModifier(@NotNull net.kyori.adventure.key.Key key);
+
+    /**
+     * Gets the modifier with the corresponding UUID.
+     *
+     * @param uuid the UUID of the modifier
+     * @return the modifier, if it exists
+     * @deprecated use {@link #getModifier(net.kyori.adventure.key.Key)}, modifiers are no longer stored by UUID
+     */
+    @Deprecated(forRemoval = true, since = "1.21")
+    @org.jetbrains.annotations.Nullable AttributeModifier getModifier(@NotNull java.util.UUID uuid);
+
+    /**
+     * Remove a modifier with the corresponding UUID from this instance.
+     *
+     * @param uuid the UUID of the modifier
+     * @deprecated use {@link #removeModifier(net.kyori.adventure.key.Key)}, modifiers are no longer stored by UUID
+     */
+    @Deprecated(forRemoval = true, since = "1.21")
+    void removeModifier(@NotNull java.util.UUID uuid);
+    // Paper end
+
     /**
      * Add a modifier to this instance.
      *
diff --git a/src/main/java/org/bukkit/attribute/AttributeModifier.java b/src/main/java/org/bukkit/attribute/AttributeModifier.java
index d66502c9df2592cd18694481e7e90a71a5c3a359..90f18f355a6a236a7e4273cc1258e7c8034b8276 100644
--- a/src/main/java/org/bukkit/attribute/AttributeModifier.java
+++ b/src/main/java/org/bukkit/attribute/AttributeModifier.java
@@ -25,22 +25,22 @@ public class AttributeModifier implements ConfigurationSerializable, Keyed {
     private final Operation operation;
     private final EquipmentSlotGroup slot;
 
-    @Deprecated
+    @Deprecated(forRemoval = true, since = "1.21")
     public AttributeModifier(@NotNull String name, double amount, @NotNull Operation operation) {
         this(UUID.randomUUID(), name, amount, operation);
     }
 
-    @Deprecated
+    @Deprecated(forRemoval = true, since = "1.21")
     public AttributeModifier(@NotNull UUID uuid, @NotNull String name, double amount, @NotNull Operation operation) {
         this(uuid, name, amount, operation, (EquipmentSlot) null);
     }
 
-    @Deprecated
+    @Deprecated(forRemoval = true, since = "1.21")
     public AttributeModifier(@NotNull UUID uuid, @NotNull String name, double amount, @NotNull Operation operation, @Nullable EquipmentSlot slot) {
         this(uuid, name, amount, operation, (slot) == null ? EquipmentSlotGroup.ANY : slot.getGroup());
     }
 
-    @Deprecated
+    @Deprecated(forRemoval = true, since = "1.21")
     public AttributeModifier(@NotNull UUID uuid, @NotNull String name, double amount, @NotNull Operation operation, @NotNull EquipmentSlotGroup slot) {
         this(NamespacedKey.fromString(uuid.toString()), amount, operation, slot);
     }
@@ -63,7 +63,7 @@ public class AttributeModifier implements ConfigurationSerializable, Keyed {
      * @deprecated attributes are now identified by keys
      */
     @NotNull
-    @Deprecated
+    @Deprecated(forRemoval = true, since = "1.21")
     public UUID getUniqueId() {
         return UUID.fromString(getKey().toString());
     }
