From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Thu, 16 May 2024 11:14:16 -0700
Subject: [PATCH] fixup! More Teleport API


diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index a2d336ceb52b63db5c03432ee7bc94dc6a742b82..112c7a31c0d1694b8bf2cdd7921ed28c027015c9 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -239,20 +239,21 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         location.checkFinite();
         // Paper start - Teleport passenger API
         Set<io.papermc.paper.entity.TeleportFlag> flagSet = Set.of(flags);
-        boolean dismount = !flagSet.contains(io.papermc.paper.entity.TeleportFlag.EntityState.RETAIN_VEHICLE);
-        boolean ignorePassengers = flagSet.contains(io.papermc.paper.entity.TeleportFlag.EntityState.RETAIN_PASSENGERS);
-        // Don't allow teleporting between worlds while keeping passengers
-        if (flagSet.contains(io.papermc.paper.entity.TeleportFlag.EntityState.RETAIN_PASSENGERS) && this.entity.isVehicle() && location.getWorld() != this.getWorld()) {
+        final boolean retainVehicle = flagSet.contains(io.papermc.paper.entity.TeleportFlag.EntityState.RETAIN_VEHICLE);
+        final boolean retainPassengers = flagSet.contains(io.papermc.paper.entity.TeleportFlag.EntityState.RETAIN_PASSENGERS);
+        final boolean sameWorld = location.getWorld() == this.getWorld();
+
+        if (this.entity.isVehicle() && retainPassengers && !sameWorld) {
+            // if target is a vehicle (has passengers) and RETAIN_PASSENGERS is specified and the tp is inter-world
             return false;
         }
 
-        // Don't allow to teleport between worlds if remaining on vehicle
-        if (!dismount && this.entity.isPassenger() && location.getWorld() != this.getWorld()) {
-            return false;
+        if (this.entity.isPassenger() && retainVehicle) {
+            return false; // You can't teleport a passenger and keep the vehicle
         }
         // Paper end
 
-        if ((!ignorePassengers && this.entity.isVehicle()) || this.entity.isRemoved()) { // Paper - Teleport passenger API
+        if (this.entity.isRemoved()) { // Paper - Teleport passenger API (move vehicle check up a bit)
             return false;
         }
 
@@ -268,7 +269,8 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         // Paper end
 
         // If this entity is riding another entity, we must dismount before teleporting.
-        if (dismount) this.entity.stopRiding(); // Paper - Teleport passenger API
+        this.entity.stopRiding(true); // Paper - Teleport passenger API - always stop riding; if RETAIN_VEHICLE was specified, it returned early above & force dismount
+        if (!retainPassengers) this.entity.ejectPassengers(); // Paper - Teleport passenger API
 
         // Let the server handle cross world teleports
         if (location.getWorld() != null && !location.getWorld().equals(this.getWorld())) {
